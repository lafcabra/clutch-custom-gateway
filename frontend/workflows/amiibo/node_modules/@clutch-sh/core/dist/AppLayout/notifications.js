import React from "react";
import styled from "@emotion/styled";
import { ClickAwayListener, Grow as MuiGrow, IconButton, ListItemText as MuiListItemText, MenuItem as MuiMenuItem, MenuList, Paper as MuiPaper, Popper as MuiPopper, } from "@material-ui/core";
import NotificationsIcon from "@material-ui/icons/Notifications";
const StyledNotificationsIcon = styled(IconButton)({
    color: "#ffffff",
    marginRight: "8px",
    padding: "12px",
    "&:hover": {
        background: "#2d3db4",
    },
    "&:active": {
        background: "#2938a5",
    },
});
const Popper = styled(MuiPopper)({
    padding: "0 12px",
    marginLeft: "12px",
});
const Paper = styled(MuiPaper)({
    width: "242px",
    border: "1px solid #E7E7EA",
    boxShadow: "0px 5px 15px rgba(53, 72, 212, 0.2)",
});
const MenuItem = styled(MuiMenuItem)({
    height: "48px",
    padding: "12px",
    "&:hover": {
        backgroundColor: "#E7E7EA",
    },
    "&:active": {
        backgroundColor: "#EBEDFB",
    },
});
const ListItemText = styled(MuiListItemText)({
    margin: "0px",
    ".MuiTypography-root": {
        color: "#0D1030",
        fontSize: "14px",
        lineHeight: "24px",
    },
});
const Grow = styled(MuiGrow)((props) => ({
    transformOrigin: props.placement,
}));
const Notifications = ({ data }) => {
    const [open, setOpen] = React.useState(false);
    const anchorRef = React.useRef(null);
    const handleToggle = () => {
        setOpen(!open);
    };
    const handleClose = event => {
        if (anchorRef.current && anchorRef.current.contains(event.target)) {
            return;
        }
        setOpen(false);
    };
    function handleListKeyDown(event) {
        if (event.key === "Tab") {
            event.preventDefault();
            setOpen(false);
        }
    }
    return (React.createElement(React.Fragment, null,
        React.createElement(StyledNotificationsIcon, { ref: anchorRef, edge: "end", "aria-controls": open ? "notification-options" : undefined, "aria-haspopup": "true", onClick: handleToggle },
            React.createElement(NotificationsIcon, null)),
        React.createElement(Popper, { open: open, anchorEl: anchorRef.current, transition: true, placement: "bottom-end" }, ({ TransitionProps, placement }) => (React.createElement(Grow, Object.assign({}, TransitionProps, { placement: placement === "bottom" ? "center top" : "center bottom" }),
            React.createElement(Paper, null,
                React.createElement(ClickAwayListener, { onClickAway: handleClose },
                    React.createElement(MenuList, { autoFocusItem: open, id: "notification-options", onKeyDown: handleListKeyDown }, data === null || data === void 0 ? void 0 : data.map(d => {
                        return (React.createElement(MenuItem, null,
                            React.createElement(ListItemText, null, d.value)));
                    })))))))));
};
export default Notifications;
