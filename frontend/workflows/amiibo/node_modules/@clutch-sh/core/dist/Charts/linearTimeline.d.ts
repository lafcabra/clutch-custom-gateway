/// <reference types="react" />
import type { CustomTooltipProps, LinearTimelineData, LinearTimelineStylingProps } from "./types";
/**
 *
 * @param data - an object that maps the lanes to their datapoints
 * @param xAxisDataKey - the key in the data object that contains the timestamps (defaulted to "timestamp")
 * @param regularIntervalTicks - whether to show regularly spaced ticks on the X-Axis (defaulted to true)
 * @param tickFormatterFunction - a function that formats the ticks on the X-Axis (defaulted to localTimeFormatter)
 * @param legend - whether to show the legend (defaulted to true)
 */
export interface LinearTimelineProps {
    data: LinearTimelineData;
    xAxisDataKey: string;
    regularIntervalTicks?: boolean;
    tickFormatterFunc?: (timestamp: number) => string;
    legend?: boolean;
    tooltipFormatterFunc?: ({ active, payload }: CustomTooltipProps) => JSX.Element;
    stylingProps?: LinearTimelineStylingProps;
}
/**
 * We wrap the ScatterPlot Recharts component for use in linear timeline views. This is more useful than the
 * wrapper for linecharts for this specific use case of having "lanes" of events and their timestamps.
 */
declare const LinearTimeline: ({ data, xAxisDataKey, regularIntervalTicks, tickFormatterFunc, legend, tooltipFormatterFunc, stylingProps, }: LinearTimelineProps) => JSX.Element;
export default LinearTimeline;
