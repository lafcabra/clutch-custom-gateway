// API data comes in as an array, this will rotate it into an object usable by the StorageContext
const transformAPISharedState = (data) => {
    const hydrated = {};
    data.forEach(({ key, state = {} }) => {
        hydrated[key] = state;
    });
    return hydrated;
};
const storeLocalData = (key, data) => {
    try {
        window.localStorage.setItem(key, JSON.stringify(data));
    }
    catch (e) {
        // eslint-disable-next-line no-console
        console.error("Error saving to local storage", e);
    }
};
const removeLocalData = (key) => window.localStorage.removeItem(key);
const retrieveLocalData = (key) => {
    const localData = window.localStorage.getItem(key);
    if (localData) {
        try {
            return JSON.parse(localData);
        }
        catch (_) {
            return localData;
        }
    }
};
const retrieveData = (store, componentName, key, defaultData) => {
    var _a;
    if (store && store[componentName]) {
        return key.length ? store[componentName][key] : store[componentName];
    }
    if (key.length) {
        return (_a = retrieveLocalData(key)) !== null && _a !== void 0 ? _a : defaultData;
    }
    return defaultData;
};
export { removeLocalData, retrieveData, storeLocalData, transformAPISharedState };
