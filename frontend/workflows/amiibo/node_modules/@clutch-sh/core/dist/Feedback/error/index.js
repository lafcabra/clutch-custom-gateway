import React from "react";
import styled from "@emotion/styled";
import { IconButton } from "@material-ui/core";
import MuiOpenInNewIcon from "@material-ui/icons/OpenInNew";
import RefreshIcon from "@material-ui/icons/Refresh";
import { Link } from "../../link";
import { isHelpDetails } from "../../Network/errors";
import { Alert } from "../alert";
import ErrorDetails from "./details";
const ErrorSummaryContainer = styled.div({
    width: "100%",
    display: "flex",
    flexDirection: "column",
});
const ErrorSummaryMessage = styled.div({
    lineHeight: "24px",
    margin: "4px 0",
    flex: "1",
});
const ErrorSummaryLink = styled(Link)({
    fontSize: "14px",
    fontWeight: 400,
    color: "rgb(13,16,48,0.6)",
    display: "flex",
    alignItems: "center",
});
const ErrorAlert = styled(Alert)(props => props["data-detailed"]
    ? {
        borderBottomLeftRadius: "unset",
        borderBottomRightRadius: "unset",
    }
    : {});
const OpenInNewIcon = styled(MuiOpenInNewIcon)({
    margin: "3px 8px 3px 0",
});
const Error = ({ subject: error, onRetry }) => {
    var _a, _b, _c;
    const action = onRetry !== undefined ? (React.createElement(IconButton, { "aria-label": "retry", color: "inherit", size: "small", onClick: () => onRetry() },
        React.createElement(RefreshIcon, null))) : null;
    if ((error === null || error === void 0 ? void 0 : error.details) === undefined) {
        return (React.createElement(Alert, { severity: "error", title: (_a = error.status) === null || _a === void 0 ? void 0 : _a.text, action: action }, error.message));
    }
    let links = [];
    const hasDetails = ((_b = error.details) === null || _b === void 0 ? void 0 : _b.filter(detail => {
        if (isHelpDetails(detail)) {
            links = (detail === null || detail === void 0 ? void 0 : detail.links) || [];
            return false;
        }
        return true;
    }).length) > 0;
    return (React.createElement("div", null,
        React.createElement(ErrorAlert, { severity: "error", title: (_c = error.status) === null || _c === void 0 ? void 0 : _c.text, "data-detailed": hasDetails, action: action },
            React.createElement(ErrorSummaryContainer, null,
                React.createElement(ErrorSummaryMessage, null, error.message),
                links.map(link => (React.createElement(ErrorSummaryLink, { key: link.link, href: link.link },
                    React.createElement(OpenInNewIcon, { fontSize: "small" }),
                    link.description))))),
        hasDetails && React.createElement(ErrorDetails, { error: error })));
};
export default Error;
