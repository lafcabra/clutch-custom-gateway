import React, { useState } from "react";
import { clutch as IClutch } from "@clutch-sh/api";
import { capitalize, isInteger } from "lodash";
import Emoji from "../Assets/emojis";
import { IconButton } from "../button";
import { Tooltip } from "../Feedback";
import styled from "../styled";
// Will convert a given integer to a typed enum key if necessary
const getKey = (map, val) => Object.keys(map).find(key => map[key] === val);
/**
 * EmojiRatings component which will take an array of emojis and given ratings and create IconButtons with them and return them on selection
 *
 * @param ratings given array of ratings to display
 * @param setRating function which will return the given selected rating
 * @returns rendered EmojiRatings component
 */
const EmojiRatings = ({ ratings = [], setRating, placement = "top", buttonSize = "small", emojiSize = "medium", }) => {
    const [selectedRating, selectRating] = useState(null);
    const StyledIconButton = styled(IconButton)({
        "&:hover": {
            opacity: 1,
        },
    }, props => ({
        opacity: props.$selected ? 1 : 0.5,
        ...((props === null || props === void 0 ? void 0 : props.size) === "medium" && { padding: "6px" }),
    }));
    const select = (rating) => {
        selectRating(rating);
        setRating(rating);
    };
    return (React.createElement(React.Fragment, null, ratings.map((rating) => {
        const { label } = rating;
        const emoji = isInteger(rating.emoji)
            ? getKey(IClutch.feedback.v1.EmojiRating, rating.emoji)
            : rating.emoji;
        return (React.createElement(Tooltip, { key: label, title: capitalize(label), placement: placement },
            React.createElement(StyledIconButton, { key: `rating-${emoji}`, variant: "neutral", "$selected": (selectedRating === null || selectedRating === void 0 ? void 0 : selectedRating.label) === label, onClick: () => select({ label, emoji: emoji }), size: buttonSize },
                React.createElement(Emoji, { type: emoji, size: emojiSize }))));
    })));
};
export default EmojiRatings;
