import React from "react";
import type { ClutchError } from "../Network/errors";
declare enum ResolverAction {
    SCHEMAS_LOADING = 0,
    SCHEMAS_SUCCCESS = 1,
    SCHEMAS_ERROR = 2,
    RESOLVING = 3,
    RESOLVE_ERROR = 4,
    RESOLVE_SUCCESS = 5
}
export interface DispatchAction {
    allSchemas?: any[];
    error?: ClutchError;
    schema?: any;
    type: ResolverAction;
}
declare const useResolverState: () => [{
    schemasLoading: boolean;
    allSchemas: any[];
    searchableSchemas: any[];
    schemaFetchError: any;
    resolverLoading: boolean;
    resolverData: {};
    resolverFetchError: any;
}, React.Dispatch<DispatchAction>];
export { ResolverAction, useResolverState };
