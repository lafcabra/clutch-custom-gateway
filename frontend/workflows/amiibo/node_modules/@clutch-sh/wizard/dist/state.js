import React from "react";
var WizardAction;
(function (WizardAction) {
    WizardAction[WizardAction["NEXT"] = 0] = "NEXT";
    WizardAction[WizardAction["BACK"] = 1] = "BACK";
    WizardAction[WizardAction["RESET"] = 2] = "RESET";
})(WizardAction || (WizardAction = {}));
const reducer = (state, action) => {
    switch (action) {
        case WizardAction.NEXT:
            return {
                ...state,
                activeStep: state.activeStep + 1,
            };
        case WizardAction.BACK:
            return {
                ...state,
                activeStep: state.activeStep > 0 ? state.activeStep - 1 : 0,
            };
        case WizardAction.RESET:
            return {
                ...state,
                activeStep: 0,
            };
        default:
            throw new Error(`Unknown wizard state: ${action}`);
    }
};
const initialState = {
    activeStep: 0,
};
const useWizardState = () => {
    return React.useReducer(reducer, initialState);
};
export { WizardAction, useWizardState };
